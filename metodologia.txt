ETAPA 1:
"""                                         DOCS:*** METODOLOGÍA ***

Crear una carpeta en drive que contenga los archivos y carpetas que conforman tu proyecto. Compartir el link en el apartado de entrega en
el Campus Virtual. Al final de la cursada, serás evaluado mediante la entrega de un Proyecto Integrador, esta última instancia evaluativa es
de carácter obligatorio para finalizar el curso y obtener la certificación.  Este proyecto se construirá de manera progresiva a lo largo de
la cursada, combinando la "Pre - Entrega" y la resolución de los "Ejercicios Prácticos" siguientes presentes en las clases. Las "Rubricas de
Evaluación" del Proyecto final integrador estará constituido en gran medida por los "Ejercicios Prácticos" y las "Rutas de Avance" a lo largo
de la cursada. Entrega: En la Clase N° 15  se discutirán las rubricas a evaluar. Tendrás 7 dias de corrido para realizar la entrega. """

"""                                         *** PROYECTO ***
En Techlab recibimos un nuevo proyecto de un cliente que requiere el desarrollo de una aplicación en Python capaz de gestionar información de
clientes, productos y pedidos. La solución deberá incluir funcionalidades para registrar, consultar, actualizar y eliminar datos, utilizando
una base de datos SQLite integrada con el programa.
"""

"""                                        *** Ruta de avance hacia el Trabajo Final Integrador (TFI) ***

Ahora que llegaste a la clase 4, estás en una posición ideal para comenzar a trabajar en los cimientos del programa que desarrollarás como
parte del Trabajo Final Integrador (TFI). Como sabés, en este proyecto, vas a crear una aplicación en Python que gestione información sobre
los productos de una tienda. Es importante que empieces a planificar cómo integrar lo que aprendiste hasta ahora.
Con los conocimientos adquiridos en las clases anteriores, ya podés diseñar la estructura básica del programa. Por ejemplo, podés usar cadenas
de texto para almacenar nombres, descripciones y cualquier otro dato textual. También podés aplicar los métodos de cadenas para validar y
formatear la información que se ingrese por la terminal, como convertir todo a minúsculas o eliminar espacios en blanco innecesarios.
La validación de las entradas es otro aspecto fundamental que podés abordar con lo aprendido en las clases 3 y 4. Las estructuras
condicionales como if, elif y match te permiten manejar diferentes escenarios. Por ejemplo, podés validar que un correo electrónico incluya
el carácter @ o que una edad ingresada sea un número positivo. Esto hace que tu programa sea más robusto y resistente a errores de ingreso.
También es importante planificar cómo va a interactuar el usuario con tu programa. Podés usar lo que aprendiste para mostrar menús simples
que permitan elegir entre distintas opciones, como registrar un cliente o consultar los datos ingresados. Pensá en aplicar condicionales y
métodos de cadenas para hacer más clara y amigable la presentación de estas opciones.
Aunque todavía no aprendiste a trabajar con bases de datos ni a guardar datos de manera persistente, no te preocupes. Más adelante en el
curso, vamos a integrar estas herramientas con bases de datos para completar la funcionalidad del proyecto.
Como tarea concreta, te sugerimos que crees un programa que solicite los datos de un producto y los muestre en formato de tarjeta o ficha,
utilizando f-Strings para formatear la salida. Aprovechá los métodos de cadenas para validar las entradas y asegurarte de que estén en el
formato correcto.
Experimentá. Recordá que cada paso que avances ahora va a facilitar el desarrollo del proyecto final. Es mejor empezar con algo pequeño e ir
construyendo sobre eso, en lugar de intentar resolver todo de una sola vez.
"""


#########################################################333
ETAPA 2: 

1) Se elimina la base de datos estatica que se generaba en el archivo proyecto-integrador.py:

#############################################################################################################
############################### BASE DE DATOS CON LISTA DE PRODUCTOS INICIAL ################################
#############################################################################################################

# BASE DE DATOS PRODUCTOS INICIAL
productos = [
    {"codigo": 101, "nombre": "Celular", "precio": 400, "descripcion": "Smartphone 2025", "categoria": "Tecnologia"},
    {"codigo": 102, "nombre": "Notebook", "precio": 1000, "descripcion": "Ultrapotente Gamer", "categoria": "Tecnologia"},
    {"codigo": 103, "nombre": "Smart TV", "precio": 300, "descripcion": "Smart TV Full HD", "categoria": "Tecnologia"},
    {"codigo": 104, "nombre": "Robot Aspiradora", "precio": 250, "descripcion": "Limpia, tradea y desinfecta", "categoria": "Pequeños electrodomésticos"},
    {"codigo": 105, "nombre": "Batidora", "precio": 80, "descripcion":"Batidora Inteligente", "categoria": "Pequeños electrodomésticos"},
    {"codigo": 106, "nombre": "Microondas", "precio": 150, "descripcion": "Potente y autolimpieza", "categoria": "Cocina"}
]




Entrega de Proyecto ❌ | ✅

A partir de la Clase N° 15 tendrás 7 días de corrido para realizar la autoevaluación y la entrega en el campus virtual.

Vas a desarrollar un programa en Python que cumpla con las siguientes características:

 * Base de datos:
- Crear una base de datos llamada 'inventario.db' para almacenar los datos de los productos.  ✅
- La tabla 'productos' debe contener las siguientes columnas.
    - 'id': Identificador único del producto (clave primaria, autoincremental) ✅
    - 'nombre': Nombre del producto (texto, no nulo). ✅
    - 'descripcion': Breve descripción del producto (texto). ✅
    - 'cantidad': Cantidad disponible del producto (entero, no nulo).❌
    - 'precio': Precio del producto (real, no nulo). ✅
    - 'categoria': Categoría a la que pertenece el producto (texto).✅

Funcionalidades de la aplicación:
    - Registrar nuevos productos.✅ 
    - Visualizar datos de los productos registrados.✅
    - Actualizar datos de productos, mediante su ID. ✅
    - Eliminación de productos, mediante su ID. ✅
    - Búsqueda de productos, mediante su ID. De manera opcional, se puede implementar la búsqueda por los campos nombre o categoría. ✅
    - Reporte de productos que tengan una cantidad igual o inferior a un límite especificado por el usuario o usuaria.

Interfaz de usuario:
    - Implementar una interfaz de usuario básica, para interactuar con la base de datos a través de la terminal. La interfaz debe incluir 
    un menú principal con las opciones necesarias para acceder a cada funcionalidad descrita anteriormente.

    - Opcional: Utilizar el módulo 'colorama' para mejorar la legibilidad y experiencia de usuario en la terminal, añadiendo colores a los 
    mensajes y opciones

Requisitos técnicos:
    - El código debe estar bien estructurado, utilizando funciones para modularizar la lógica de la aplicación.
   - Los comentarios deben estar presentes en el código, explicando las partes clave del mismo.




